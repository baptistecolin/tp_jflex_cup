// $Id: calcul.jlex 505 2017-09-25 12:44:47Z coelho $
import java_cup.runtime.Symbol;
import java.io.*;
%%
%class Lexer
%line
%column
%cup
%{
  /** fonction de test du lexer. */
  static public void main(String[] args) throws Exception {
    Lexer lexer = new Lexer(new InputStreamReader(System.in));
    while (true) {
      Symbol s = lexer.next_token();
      System.out.println(s);
    }
  }
%}
%%
"(" { return new Symbol(sym.TK_OPBRA); }
")" { return new Symbol(sym.TK_CLBRA); }
">=" { return new Symbol(sym.TK_SUPEQ); }
"<=" { return new Symbol(sym.TK_LOWEQ); }
">" { return new Symbol(sym.TK_SUP); }
"<" { return new Symbol(sym.TK_LOW); }
"==" { return new Symbol(sym.TK_EQUAL); }
"and" { return new Symbol(sym.TK_AND); }
"or" { return new Symbol(sym.TK_OR); }
"not" { return new Symbol(sym.TK_NOT); }
"sin" { return new Symbol(sym.TK_SIN); }
"cos" { return new Symbol(sym.TK_COS); }
"tan" { return new Symbol(sym.TK_TAN); }
"sqrt" { return new Symbol(sym.TK_SQRT); }
"ln" { return new Symbol(sym.TK_LN); }
"exp" { return new Symbol(sym.TK_EXP); }
"e" { return new Symbol(sym.TK_E); }
"pi" { return new Symbol(sym.TK_PI); }
"variables" { return new Symbol(sym.TK_ALLVAR); }
"exit" { return new Symbol(sym.TK_EXIT); }
[0-9]+  { return new Symbol(sym.TK_VAL, new Double(yytext())); }
[a-zA-Z]+ { return new Symbol(sym.TK_ID, new String(yytext())); }
"**" { return new Symbol(sym.TK_POW); }
"+" { return new Symbol(sym.TK_PLUS); }
"-" { return new Symbol(sym.TK_MINUS); }
"*" { return new Symbol(sym.TK_MULT); }
"/" { return new Symbol(sym.TK_DIV); }
"_" { return new Symbol(sym.TK_UMINUS); }
"=" { return new Symbol(sym.TK_ASSIGN); }
"?" { return new Symbol(sym.TK_CONDI); }
":" { return new Symbol(sym.TK_CONDI2); }
(\n|\r|\r\n)	{ return new Symbol(sym.TK_DONE); }

[\ \t\f] { /* ignore espaces et assimiles. */ }
.	{ System.err.println("unexpected char '" + yytext() +
			     "' line " + yyline);
	  return new Symbol(sym.error); }
